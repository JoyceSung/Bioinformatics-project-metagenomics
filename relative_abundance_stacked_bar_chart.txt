import pandas as pd
import matplotlib.pyplot as plt
import glob
import os

# === Parameters ===
folder = "asia_species/"  # Folder with Kraken report files
top_n = 10  # Top N species across all samples

# === Step 1: Read and parse all species files ===
all_data = []
sample_names = []

for file in glob.glob(os.path.join(folder, "*.csv")):
    sample_name = os.path.splitext(os.path.basename(file))[0]
    sample_names.append(sample_name)
    
    df = pd.read_csv(file, header=None,
                     names=["name", "reads_clade", "recalculated_percent"])
    df["recalculated_percent"] = pd.to_numeric(df["recalculated_percent"], errors='coerce')
    # Filter for species-level, and exclude "Homo sapiens"
#    species_df = df[(df["Rank"] == "S") & (~df["Name"].str.lower().str.startswith("homo sapiens"))]
    # Clean species names by stripping extra spaces and replacing hidden characters
    df["name"] = df["name"].str.strip().str.replace(r'\s+', ' ', regex=True)  # Replace multiple spaces

    # Filter for species-level and exclude "Homo sapiens"
    species_df = df[(~df["name"].str.lower().str.contains("homo sapiens"))]

    sample_abundances = species_df[["name", "recalculated_percent"]]
    sample_abundances = sample_abundances.groupby("name").sum()  # In case of duplicates
    sample_abundances.columns = [sample_name]
    
    all_data.append(sample_abundances)

# === Step 2: Merge into one DataFrame ===
merged_df = pd.concat(all_data, axis=1).fillna(0)

# === Step 3: Select top N species based on total abundance ===
top_species = merged_df.sum(axis=1).sort_values(ascending=False).head(top_n).index
top_df = merged_df.loc[top_species]

# Optional: Add "Other" category to represent everything else
other = 100 - top_df.sum()
top_df.loc["Other"] = other

# Transpose: rows = samples, columns = species
plot_df = top_df.T

# === Step 4: Plot stacked bar chart ===
plot_df.plot(kind="bar", stacked=True, figsize=(12, 6), colormap="tab20")

plt.ylabel("Relative Abundance (%)")
plt.title(f"Stacked Relative Abundance of Top {top_n} Species Across Samples Derived from Asia")
plt.xticks(rotation=45, ha='right')
plt.legend(title="Species", bbox_to_anchor=(1.05, 1), loc='upper left')
plt.tight_layout()
plt.savefig("stacked_bar_chart_Asia_Samples_species.png", dpi=300)
plt.show()

#---------------------------------------------------------------------------------------------------
import pandas as pd
import matplotlib.pyplot as plt
import glob
import os

# === Parameters ===
folder = "USA_species/"  # Folder with Kraken report files
top_n = 10  # Top N species across all samples

# === Step 1: Read and parse all species files ===
USA_all_data = []
USA_sample_names = []

for file in glob.glob(os.path.join(folder, "*.csv")):
    USA_sample_name = os.path.splitext(os.path.basename(file))[0]
    USA_sample_names.append(USA_sample_name)
    
    df = pd.read_csv(file, header=None,
                     names=["name", "reads_clade", "recalculated_percent"])
    df["recalculated_percent"] = pd.to_numeric(df["recalculated_percent"], errors='coerce')

    # Clean species names by stripping extra spaces and replacing hidden characters
    df["name"] = df["name"].str.strip().str.replace(r'\s+', ' ', regex=True)  # Replace multiple spaces

    # Filter for species-level and exclude "Homo sapiens"
    USA_species_df = df[(~df["name"].str.lower().str.contains("homo sapiens"))]

    USA_sample_abundances = USA_species_df[["name", "recalculated_percent"]]
    USA_sample_abundances = USA_sample_abundances.groupby("name").sum()  # In case of duplicates
    USA_sample_abundances.columns = [USA_sample_name]
    
    USA_all_data.append(USA_sample_abundances)

# === Step 2: Merge into one DataFrame ===
USA_merged_df = pd.concat(USA_all_data, axis=1).fillna(0)

# === Step 3: Select top N species based on total abundance ===
USA_top_species = USA_merged_df.sum(axis=1).sort_values(ascending=False).head(top_n).index
USA_top_df = USA_merged_df.loc[USA_top_species]

# Optional: Add "Other" category to represent everything else
other = 100 - USA_top_df.sum()
USA_top_df.loc["Other"] = other

# Transpose: rows = samples, columns = species
USA_plot_df = USA_top_df.T

# === Step 4: Plot stacked bar chart ===
USA_plot_df.plot(kind="bar", stacked=True, figsize=(12, 6), colormap="tab20")

plt.ylabel("Relative Abundance (%)")
plt.title(f"Stacked Relative Abundance of Top {top_n} Species Across Samples Derived from USA")
plt.xticks(rotation=45, ha='right')
plt.legend(title="Species", bbox_to_anchor=(1.05, 1), loc='upper left')
plt.tight_layout()
#plt.savefig("stacked_bar_chart_USA_Samples_species.png", dpi=300)
plt.show()
